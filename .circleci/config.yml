version: 2.1
orbs:
  win: circleci/windows@2.4.1
parameters:
  lockindex:
    type: string
    default: '4'
jobs:
  Core:
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: docs-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "docs/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "./node_modules/" ]; then
              npm ci --no-optional --ignore-scripts && \
              node ./node_modules/puppeteer/install.js
            fi
            if [ ! -d "./docs/node_modules/" ]; then
              cd docs && npm ci --no-optional --ignore-scripts && cd ..
            fi
      - save_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: docs-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "docs/package-lock.json" }}
          paths:
            - ./docs/node_modules
      - run:
          name: Prettier
          command: npm run prettier:check
      - run:
          name: Lint commits
          command: npx commitlint --from=origin/master
      - run:
          name: Lint tslint
          command: npm run lint
      - run:
          name: Lint typescript
          command: npm run ts:check
      - run:
          name: Build
          command: |
            npm run build
            cd ./dist/libs/ng-mocks
            npm pack
            cd ..
            mv ./ng-mocks/ng-mocks-0.0.0.tgz ./
            rm -Rf ./ng-mocks
            tar -xf ./ng-mocks-0.0.0.tgz package
            rm ./ng-mocks-0.0.0.tgz
            mv ./package ./ng-mocks
      #      - run:
      #          name: Unit Tests
      #          command: WITH_COVERAGE=1 npm run test
      - run:
          name: Docs
          command: npm run build:docs
      #      - store_test_results:
      #          path: ./test-reports
      #      - store_artifacts:
      #          path: ./test-reports/coverage
      #          prefix: coverage
      - persist_to_workspace:
          root: dist
          paths:
            - .
  #      - run:
  #          name: Collecting https://coveralls.io/github/ike18t/ng-mocks
  #          command: ./node_modules/.bin/coveralls < test-reports/coverage/lcov/lcov.info
  #      - run:
  #          name: Collecting https://codecov.io/gh/ike18t/ng-mocks
  #          command: ./node_modules/.bin/codecov -f test-reports/coverage/lcov/lcov.info --disable=gcov
  #      - run:
  #          name: Collecting https://codeclimate.com/github/ike18t/ng-mocks
  #          command: |
  #            curl -sL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 \
  #              > $HOME/codeclimate
  #            chmod +x $HOME/codeclimate
  #            $HOME/codeclimate before-build
  #            $HOME/codeclimate format-coverage \
  #              -t lcov test-reports/coverage/lcov/lcov.info \
  #              -o test-reports/codeclimate.json
  #            $HOME/codeclimate upload-coverage \
  #              -i test-reports/codeclimate.json
  E2E:
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: e2e-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "./node_modules/" ]; then
              npm ci --no-optional --ignore-scripts && \
              node ./node_modules/puppeteer/install.js && \
              ./node_modules/.bin/ngcc
            fi
      - save_cache:
          key: e2e-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: E2E
          command: npm run e2e
  'Angular Install':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - restore_cache:
          key: a-jasmine-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jasmine/package-lock.json" }}
      - restore_cache:
          key: a-jest-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jest/package-lock.json" }}
      - restore_cache:
          key: a-min-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-min/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a-jasmine/node_modules/" ]; then
              npm run i:ci:a-jasmine
            fi
            if [ ! -d "e2e/a-jest/node_modules/" ]; then
              npm run i:ci:a-jest
            fi
            if [ ! -d "e2e/a-min/node_modules/" ]; then
              npm run i:ci:a-min
            fi
      - save_cache:
          key: a-jasmine-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jasmine/package-lock.json" }}
          paths:
            - ./e2e/a-jasmine/node_modules
      - save_cache:
          key: a-jest-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jest/package-lock.json" }}
          paths:
            - ./e2e/a-jest/node_modules
      - save_cache:
          key: a-min-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-min/package-lock.json" }}
          paths:
            - ./e2e/a-min/node_modules
  'Performance':
    docker:
      - image: satantime/puppeteer-node:14.18.2-buster
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Default
          command: KARMA_SUITE=tests-performance/test.spec.ts npm run test
      - run:
          name: TestBed
          command: KARMA_SUITE=tests-performance/test-bed.spec.ts npm run test
      - run:
          name: MockBuilder
          command: KARMA_SUITE=tests-performance/mock-builder.spec.ts npm run test
      - run:
          name: MockRender
          command: KARMA_SUITE=tests-performance/mock-render.spec.ts npm run test
  'Angular 5 ES5':
    docker:
      - image: satantime/puppeteer-node:6.17.1
    steps:
      - checkout
      - restore_cache:
          key: a5es5-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a5es5/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a5es5/node_modules/" ]; then
              npm run i:a5es5
            fi
      - save_cache:
          key: a5es5-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a5es5/package-lock.json" }}
          paths:
            - ./e2e/a5es5/node_modules
      - attach_workspace:
          at: dist
      - run:
          name: Spreading Build
          command: npm run s:a5es5
      - run:
          name: Spreading Tests
          command: npm run s:test:a5es5
      - run:
          name: Unit Tests
          command: npm run test:a5es5
  'Angular 5 ES2015':
    docker:
      - image: satantime/puppeteer-node:6.17.1
    steps:
      - checkout
      - restore_cache:
          key: a5es2015-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a5es2015/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a5es2015/node_modules/" ]; then
              npm run i:a5es2015
            fi
      - save_cache:
          key: a5es2015-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a5es2015/package-lock.json" }}
          paths:
            - ./e2e/a5es2015/node_modules
      - attach_workspace:
          at: dist
      - run:
          name: Spreading Build
          command: npm run s:a5es2015
      - run:
          name: Spreading Tests
          command: npm run s:test:a5es2015
      - run:
          name: Unit Tests
          command: npm run test:a5es2015
  'Angular 6 Install':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - restore_cache:
          key: a6-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a6/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a6/node_modules/" ]; then
              npm run i:ci:a6
            fi
      - save_cache:
          key: a6-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a6/package-lock.json" }}
          paths:
            - ./e2e/a6/node_modules
  'Angular 6 ES5':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a6-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a6/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a6
      - run:
          name: Spreading Tests
          command: npm run s:test:a6
      - run:
          name: Unit Tests
          command: npm run test:a6es5
  'Angular 6 ES2015':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a6-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a6/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a6
      - run:
          name: Spreading Tests
          command: npm run s:test:a6
      - run:
          name: Unit Tests
          command: npm run test:a6es2015
  'Angular 7 Install':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - restore_cache:
          key: a7-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a7/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a7/node_modules/" ]; then
              npm run i:ci:a7
            fi
      - save_cache:
          key: a7-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a7/package-lock.json" }}
          paths:
            - ./e2e/a7/node_modules
  'Angular 7 ES5':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a7-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a7/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a7
      - run:
          name: Spreading Tests
          command: npm run s:test:a7
      - run:
          name: Unit Tests
          command: npm run test:a7es5
  'Angular 7 ES2015':
    docker:
      - image: satantime/puppeteer-node:8.17.0
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a7-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a7/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a7
      - run:
          name: Spreading Tests
          command: npm run s:test:a7
      - run:
          name: Unit Tests
          command: npm run test:a7es2015
  'Angular 8 Install':
    docker:
      - image: satantime/puppeteer-node:10.24.1
    steps:
      - checkout
      - restore_cache:
          key: a8-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a8/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a8/node_modules/" ]; then
              npm run i:ci:a8
            fi
      - save_cache:
          key: a8-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a8/package-lock.json" }}
          paths:
            - ./e2e/a8/node_modules
  'Angular 8 ES5':
    docker:
      - image: satantime/puppeteer-node:10.24.1
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a8-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a8/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a8
      - run:
          name: Spreading Tests
          command: npm run s:test:a8
      - run:
          name: Unit Tests
          command: npm run test:a8es5
  'Angular 8 ES2015':
    docker:
      - image: satantime/puppeteer-node:10.24.1
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a8-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a8/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a8
      - run:
          name: Spreading Tests
          command: npm run s:test:a8
      - run:
          name: Unit Tests
          command: npm run test:a8es2015
  'Angular 9 Install':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - restore_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a9/node_modules/" ]; then
              npm run i:ci:a9
            fi
      - save_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
          paths:
            - ./e2e/a9/node_modules
  'Angular 9 ES5':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a9
      - run:
          name: Spreading Tests
          command: npm run s:test:a9
      - run:
          name: Unit Tests
          command: npm run test:a9es5
  'Angular 9 ES2015':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a9
      - run:
          name: Spreading Tests
          command: npm run s:test:a9
      - run:
          name: Unit Tests
          command: npm run test:a9es2015
  'Angular 9 ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a9
      - run:
          name: Spreading Tests
          command: npm run s:test:a9
      - run:
          name: Unit Tests
          command: npm run test:a9es5ivy
  'Angular 9 ES2016 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a9-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a9/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a9
      - run:
          name: Spreading Tests
          command: npm run s:test:a9
      - run:
          name: Unit Tests
          command: npm run test:a9es2015ivy
  'Angular 10 Install':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - restore_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a10/node_modules/" ]; then
              npm run i:ci:a10
            fi
      - save_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
          paths:
            - ./e2e/a10/node_modules
  'Angular 10 ES5':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a10
      - run:
          name: Spreading Tests
          command: npm run s:test:a10
      - run:
          name: Unit Tests
          command: npm run test:a10es5
  'Angular 10 ES2017':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a10
      - run:
          name: Spreading Tests
          command: npm run s:test:a10
      - run:
          name: Unit Tests
          command: npm run test:a10es2015
  'Angular 10 ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a10
      - run:
          name: Spreading Tests
          command: npm run s:test:a10
      - run:
          name: Unit Tests
          command: npm run test:a10es5ivy
  'Angular 10 ES2018 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a10-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a10/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a10
      - run:
          name: Spreading Tests
          command: npm run s:test:a10
      - run:
          name: Unit Tests
          command: npm run test:a10es2015ivy
  'Angular 11 Install':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - restore_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a11/node_modules/" ]; then
              npm run i:ci:a11
            fi
      - save_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
          paths:
            - ./e2e/a11/node_modules
  'Angular 11 ES5':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a11
      - run:
          name: Spreading Tests
          command: npm run s:test:a11
      - run:
          name: Unit Tests
          command: npm run test:a11es5
  'Angular 11 ES2019':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a11
      - run:
          name: Spreading Tests
          command: npm run s:test:a11
      - run:
          name: Unit Tests
          command: npm run test:a11es2015
  'Angular 11 ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a11
      - run:
          name: Spreading Tests
          command: npm run s:test:a11
      - run:
          name: Unit Tests
          command: npm run test:a11es5ivy
  'Angular 11 ES2020 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a11-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a11/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a11
      - run:
          name: Spreading Tests
          command: npm run s:test:a11
      - run:
          name: Unit Tests
          command: npm run test:a11es2015ivy
  'Angular 12 Install':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - restore_cache:
          key: a12-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a12/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a12/node_modules/" ]; then
              npm run i:ci:a12
            fi
      - save_cache:
          key: a12-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a12/package-lock.json" }}
          paths:
            - ./e2e/a12/node_modules
  'Angular 12 ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a12-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a12/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a12
      - run:
          name: Spreading Tests
          command: npm run s:test:a12
      - run:
          name: Unit Tests
          command: npm run test:a12es5ivy
  'Angular 12 ES2020 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a12-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a12/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a12
      - run:
          name: Spreading Tests
          command: npm run s:test:a12
      - run:
          name: Unit Tests
          command: npm run test:a12es2015ivy
  'Angular 13 Install':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - restore_cache:
          key: a13-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a13/package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if [ ! -d "e2e/a13/node_modules/" ]; then
              npm run i:ci:a13
            fi
      - save_cache:
          key: a13-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a13/package-lock.json" }}
          paths:
            - ./e2e/a13/node_modules
  'Angular 13 ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a13-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a13/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a13
      - run:
          name: Spreading Tests
          command: npm run s:test:a13
      - run:
          name: Unit Tests
          command: npm run test:a13es5ivy
  'Angular 13 ES2020 Ivy':
    docker:
      - image: satantime/puppeteer-node:12.22.8
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a13-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a13/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a13
      - run:
          name: Spreading Tests
          command: npm run s:test:a13
      - run:
          name: Unit Tests
          command: npm run test:a13es2015ivy
  'Angular Jasmine ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-jasmine-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jasmine/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-jasmine
      - run:
          name: Unit Tests
          command: npm run test:a-jasmine:es5ivy
  'Angular Jasmine ES2020 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-jasmine-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jasmine/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-jasmine
      - run:
          name: Unit Tests
          command: npm run test:a-jasmine:es2015ivy
  'Angular Jest ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-jest-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jest/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-jest
      - run:
          name: Unit Tests
          command: npm run test:a-jest:es5ivy
  'Angular Jest ES2020 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-jest-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-jest/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-jest
      - run:
          name: Unit Tests
          command: npm run test:a-jest:es2015ivy
  'Angular Min ES5 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-min-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-min/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-min
      - run:
          name: Unit Tests
          command: npm run test:a-min:es5ivy
      - run:
          name: Build
          command: npm run build:a-min:es5ivy
  'Angular Min ES2015 Ivy':
    docker:
      - image: satantime/puppeteer-node:14.18.2
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - restore_cache:
          key: a-min-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "e2e/a-min/package-lock.json" }}
      - run:
          name: Spreading Build
          command: npm run s:a-min
      - run:
          name: Unit Tests
          command: npm run test:a-min:es2015ivy
      - run:
          name: Build
          command: npm run build:a-min:es2015ivy
  Core IE:
    executor:
      name: win/default
    steps:
      - checkout
      - restore_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: NPM Install
          command: |
            if ((Test-Path "node_modules") -ne "True") {
              npm ci --no-optional --ignore-scripts
            }
      - save_cache:
          key: root-<< pipeline.parameters.lockindex >>-{{ arch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Unit Tests
          command: npm run test -- --reporters dots,junit
      - store_test_results:
          path: ./test-reports
    environment:
      IE_BIN: 'C:\Program Files\Internet Explorer\iexplore.exe'
workflows:
  version: 2
  Testing:
    jobs:
      - Core
      - E2E:
          requires:
            - Core
      #      - 'Core IE':
      #          requires:
      #            - Core
      #      - 'Performance':
      #          requires:
      #            - Core
      - 'Angular Install':
          requires:
            - Core
      - 'Angular 6 Install':
          requires:
            - Core
      - 'Angular 7 Install':
          requires:
            - Core
      - 'Angular 8 Install':
          requires:
            - Core
      - 'Angular 9 Install':
          requires:
            - Core
      - 'Angular 10 Install':
          requires:
            - Core
      - 'Angular 11 Install':
          requires:
            - Core
      - 'Angular 12 Install':
          requires:
            - Core
      - 'Angular 13 Install':
          requires:
            - Core
      - 'Angular 5 ES5':
          requires:
            - Core
      - 'Angular 5 ES2015':
          requires:
            - Core
      - 'Angular 6 ES5':
          requires:
            - Angular 6 Install
      - 'Angular 6 ES2015':
          requires:
            - Angular 6 Install
      - 'Angular 7 ES5':
          requires:
            - Angular 7 Install
      - 'Angular 7 ES2015':
          requires:
            - Angular 7 Install
      - 'Angular 8 ES5':
          requires:
            - Angular 8 Install
      - 'Angular 8 ES2015':
          requires:
            - Angular 8 Install
      - 'Angular 9 ES5':
          requires:
            - Angular 9 Install
      - 'Angular 9 ES2015':
          requires:
            - Angular 9 Install
      - 'Angular 9 ES5 Ivy':
          requires:
            - Angular 9 Install
      - 'Angular 9 ES2016 Ivy':
          requires:
            - Angular 9 Install
      - 'Angular 10 ES5':
          requires:
            - Angular 10 Install
      - 'Angular 10 ES2017':
          requires:
            - Angular 10 Install
      - 'Angular 10 ES5 Ivy':
          requires:
            - Angular 10 Install
      - 'Angular 10 ES2018 Ivy':
          requires:
            - Angular 10 Install
      - 'Angular 11 ES5':
          requires:
            - Angular 11 Install
      - 'Angular 11 ES2019':
          requires:
            - Angular 11 Install
      - 'Angular 11 ES5 Ivy':
          requires:
            - Angular 11 Install
      - 'Angular 11 ES2020 Ivy':
          requires:
            - Angular 11 Install
      - 'Angular 12 ES5 Ivy':
          requires:
            - Angular 12 Install
      - 'Angular 12 ES2020 Ivy':
          requires:
            - Angular 12 Install
      - 'Angular 13 ES5 Ivy':
          requires:
            - Angular 13 Install
      - 'Angular 13 ES2020 Ivy':
          requires:
            - Angular 13 Install
      - 'Angular Jasmine ES5 Ivy':
          requires:
            - Angular Install
      - 'Angular Jasmine ES2020 Ivy':
          requires:
            - Angular Install
      - 'Angular Jest ES5 Ivy':
          requires:
            - Angular Install
      - 'Angular Jest ES2020 Ivy':
          requires:
            - Angular Install
#      - 'Angular Min ES5 Ivy':
#          requires:
#            - Angular Install
#      - 'Angular Min ES2015 Ivy':
#          requires:
#            - Angular Install
